services:
  service-discovery:
    image: 'service-discovery:latest'
    build:
      context: service-discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  api-gateway:
    image: 'api-gateway:latest'
    build:
      context: api-gateway
      dockerfile: Dockerfile
    depends_on:
      - service-discovery
    ports:
      - "8090:8080"

  ticket-service:
    image: 'ticket-service:latest'
    build:
      context: ticket-service
      dockerfile: Dockerfile
    depends_on:
      - ticket-service-db
      - service-discovery
      - api-gateway
    environment:
      DATABASE_URL: jdbc:postgresql://host.docker.internal:5432/ticket-service
      DATABASE_USERNAME: admin
      DATABASE_PASSWORD: admin
    ports:
      - "8091:8080"

  ticket-service-db:
    image: 'postgres:alpine3.19'
    container_name: ticket-service-db
    environment:
      POSTGRES_DB: ticket-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - ticket-service-volume:/var/lib/postgresql/data

  order-service:
    image: 'order-service:latest'
    build:
      context: order-service
      dockerfile: Dockerfile
    depends_on:
      - order-service-db
      - service-discovery
      - api-gateway
    environment:
      DATABASE_URL: jdbc:postgresql://host.docker.internal:5433/order-service
      DATABASE_USERNAME: admin
      DATABASE_PASSWORD: admin
    ports:
      - "8092:8080"

  order-service-db:
    image: 'postgres:alpine3.19'
    container_name: order-service-db
    environment:
      POSTGRES_DB: order-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - order-service-volume:/var/lib/postgresql/data

  tour-service:
    image: 'tour-service:latest'
    build:
      context: tour-service
      dockerfile: Dockerfile
    depends_on:
      - tour-service-db
    environment:
      DATABASE_URL: jdbc:postgresql://host.docker.internal:5434/tour-service
      DATABASE_USERNAME: admin
      DATABASE_PASSWORD: admin
    ports:
      - "8094:8080"

  tour-service-db:
    image: 'postgres:alpine3.19'
    container_name: tour-service-db
    environment:
      POSTGRES_DB: tour-service
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5434:5432"
    volumes:
      - tour-service-volume:/var/lib/postgresql/data

  payment-service:
    image: 'payment-service:latest'
    build:
      context: payment-service
      dockerfile: Dockerfile
    depends_on:
      - service-discovery
      - api-gateway
    ports:
      - "8093:8080"

  zookeeper:
    image: 'zookeeper:3.9.2-jre-17'
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

volumes:
  ticket-service-volume:
    name: ticket-service-volume
  order-service-volume:
    name: order-service-volume
  tour-service-volume:
    name: tour-service-volume